name: build python

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python_version: ['3.8', '3.9', '3.10']
        os: [ ubuntu-latest, macos-latest ]
    steps:
    - name: checkout pyoxidizer
      uses: actions/checkout@master
      with:
        repository: indygreg/PyOxidizer
        ref: main
    - name: build python
      run: |
        set -x
        mkdir -p build
        cargo install --path ./pyoxidizer
        cd pyoxy
        pyoxidizer build --var PYTHON_VERSION ${{ matrix.python_version }} --release
        CFG="$(find $(pwd) -name pyo3-build-config-file.txt)"
        PYO3_CONFIG_FILE="$CFG" cargo build --release
        PY="$(sed -rn 's/^executable=(.*)$/\1/p' $CFG)"
        mv "$(dirname $(dirname $PY))" ../build
    - name: inspect
      run: |
        ./build/install/bin/python3 -m sysconfig
    - name: build wheel
      run: |
        tags="py2.py3-none-$(python -c "import sysconfig;print(sysconfig.get_platform().replace('.','_').replace('-','_').replace('linux','manylinux'))")"
        mkdir -p wheel/interpreter-${{ matrix.python_version }}.data/data/
        mkdir -p wheel/interpreter-${{ matrix.python_version }}.dist-info/
        cat > wheel/interpreter-${{ matrix.python_version }}.dist-info/WHEEL <<EOL
        Wheel-Version: 1.0
        Generator: interpreter (${{ github.ref_name }})
        Root-Is-Purelib: true
        Tag: ${tags}
        EOL
        cat > wheel/interpreter-${{ matrix.python_version }}.dist-info/METADATA <<EOL
        Metadata-Version: 2.1
        Name: interpreter
        Version: ${{ github.ref_name }}
        Summary: Python as a Package
        Home-page: https://github.com/ucodery/interpreter
        Author: Jeremiah Paige
        Author-email: ucodery@gmail.com
        Project-URL: Source, https://github.com/ucodery/interpreter
        
        Python interpreter managed as a python package
        EOL
        mv build/install wheel/interpreter-${{ matrix.python_version }}.data/data/python
        wheel_name="interpreter-${{ matrix.python_version }}-${tags}.whl"
        cd wheel
        zip -r $wheel_name ./*
    - name: upload
      uses: actions/upload-artifact@v3
      with:
        path: "*.whl"
