name: cpython

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: [ ubuntu-latest ]
    steps:
    - name: checkout cpython
      uses: actions/checkout@master
      with:
        repository: python/cpython
        ref: refs/tags/v3.10.4
    - name: configure
      run: ./configure LDFLAGS='-static' --disable-shared  --enable-optimizations
    - name: enable static modules
      run: echo '*static*\
      _asyncio _asynciomodule.c\
      _bisect _bisectmodule.c\
      contextvars _contextvarsmodule.c' > Modules/Setup.local
#    - name: disable optaional modules # these should be fixable
#      run: sed -i.bak '/^_g\{0,1\}dbm/d' Modules/Setup.local && sed -i.bak '/^_curses/d' Modules/Setup.local && sed -i.bak '/^_sqlite3/d' Modules/Setup.local && sed -i.bak '/^_tkinter/d' Modules/Setup.local
#    - name: statically link all of openssl
#      run: sed -i.bak 's/^_hashlib.*$/_hashlib _hashopenssl.c $(OPENSSL_INCLUDES) $(OPENSSL_LDFLAGS) -l:libcrypto.a -Wl,--exclude-libs,libcrypto.a/g' Modules/Setup.local && sed -i.bak 's/^_ssl.*$/_ssl _ssl.c $(OPENSSL_INCLUDES) $(OPENSSL_LDFLAGS) -l:libssl.a -Wl,--exclude-libs,libssl.a -l:libcrypto.a -Wl,--exclude-libs,libcrypto.a /g' Modules/Setup.local
    - name: make
      run: make LDFLAGS='-static' LINKFORSHARED=' '
    - name: test
      run: ./python  -V
# full test suite will take hours
#      run: make test
    - name: upload
      uses: actions/upload-artifact@v3
      with:
        name: python
        path: python
