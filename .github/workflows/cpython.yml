name: cpython

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: [ ubuntu-latest ]
    steps:
    - name: checkout cpython
      uses: actions/checkout@master
      with:
        repository: python/cpython
        ref: refs/tags/v3.10.4
    - name: configure
      run: ./configure LDFLAGS='-static' --disable-shared  --enable-optimizations
    - name: enable static modules
      run: |
        echo '*static*
        _asyncio _asynciomodule.c
        _bisect _bisectmodule.c
        #_contextvars _contextvarsmodule.c
        _csv _csv.c
        _datetime _datetimemodule.c
        # needs mpdecimal.h on the image
        #_decimal _decimal/_decimal.c
        _heapq _heapqmodule.c
         _json.c
        _lsprof _lsprof.c rotatingtree.c
        #_multiprocessing -I$(srcdir)/Modules/_multiprocessing _multiprocessing/multiprocessing.c _multiprocessing/semaphore.c
        _opcode _opcode.c
        _pickle _pickle.c
        _queue _queuemodule.c
        _random _randommodule.c
        _socket socketmodule.c
         _statisticsmodule.c
         _struct.c
        #_typing _typingmodule.c
        _zoneinfo _zoneinfo.c
        array arraymodule.c
        audioop audioop.c
        binascii binascii.c
        cmath cmathmodule.c
         mathmodule.c
        mmap mmapmodule.c
        select selectmodule.c
        _elementtree _elementtree.c
        #pyexpat pyexpat.c
        _blake2 _blake2/blake2module.c _blake2/blake2b_impl.c _blake2/blake2s_impl.c
        _md5 md5module.c
        _sha1 sha1module.c
        _sha256 sha256module.c
        _sha512 sha512module.c
        _sha3 _sha3/sha3module.c
        _codecs_cn cjkcodecs/_codecs_cn.c
        _codecs_hk cjkcodecs/_codecs_hk.c
        _codecs_iso2022 cjkcodecs/_codecs_iso2022.c
        _codecs_jp cjkcodecs/_codecs_jp.c
        _codecs_kr cjkcodecs/_codecs_kr.c
        _codecs_tw cjkcodecs/_codecs_tw.c
        _multibytecodec cjkcodecs/multibytecodec.c
        unicodedata unicodedata.c
        _posixsubprocess _posixsubprocess.c
        _posixshmem -I$(srcdir)/Modules/_multiprocessing _multiprocessing/posixshmem.c -lrt
        fcntl fcntlmodule.c
        grp grpmodule.c
        ossaudiodev ossaudiodev.c
        resource resource.c
        spwd spwdmodule.c
        syslog syslogmodule.c
        termios termios.c' > Modules/Setup.local
#    - name: disable optaional modules # these should be fixable
#      run: sed -i.bak '/^_g\{0,1\}dbm/d' Modules/Setup.local && sed -i.bak '/^_curses/d' Modules/Setup.local && sed -i.bak '/^_sqlite3/d' Modules/Setup.local && sed -i.bak '/^_tkinter/d' Modules/Setup.local
#    - name: statically link all of openssl
#      run: sed -i.bak 's/^_hashlib.*$/_hashlib _hashopenssl.c $(OPENSSL_INCLUDES) $(OPENSSL_LDFLAGS) -l:libcrypto.a -Wl,--exclude-libs,libcrypto.a/g' Modules/Setup.local && sed -i.bak 's/^_ssl.*$/_ssl _ssl.c $(OPENSSL_INCLUDES) $(OPENSSL_LDFLAGS) -l:libssl.a -Wl,--exclude-libs,libssl.a -l:libcrypto.a -Wl,--exclude-libs,libcrypto.a /g' Modules/Setup.local
    - name: make
      run: make LDFLAGS='-static' LINKFORSHARED=' '
    - name: test
      run: ./python  -V
# full test suite will take hours
#      run: make test
    - name: upload
      uses: actions/upload-artifact@v3
      with:
        name: python
        path: python
